<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sys_ws_operation">
    <sys_ws_operation action="INSERT_OR_UPDATE">
        <active>true</active>
        <consumes>application/json,application/xml,text/xml</consumes>
        <consumes_customized>false</consumes_customized>
        <default_operation_uri/>
        <enforce_acl/>
        <http_method>GET</http_method>
        <name>Unauthorized Retrieve records for Chrome</name>
        <operation_script><![CDATA[(function process(/*RESTAPIRequest*/ request, /*RESTAPIResponse*/ response) {

	
	var path = request.pathParams;
	var queryParams = request.queryParams;
	
	var api = "";
	
	if(path.command === 'products'){
		api = 'api/now/table/x_wec_product_table';
	}else if(path.command === 'user'){
		api = 'api/now/table/sys_user';
	}else if(path.command === 'reqItems'){
		api = 'api/now/table/sc_req_item';
	}else if(path.command === 'sysUserHasRole'){
		api = 'api/now/table/sys_user_has_role';
	}else if(path.command === 'sysUserRole'){
		api = 'api/now/table/sys_user_role';
	}else if(path.command === 'approvals'){
		api = 'api/now/table/x_wec_product_approvals_view';
	}else{

		var error;
        error = new sn_ws_err.ServiceError();
        error.setStatus(501);
        error.setMessage("Not implemented");
        error.setDetail("Not implemented");
        response.setError(error);
		
		return;
		
	}

	
	var restUrl = gs.getProperty('glide.servlet.uri') + api

	var req = new sn_ws.RESTMessageV2();
	var parser = new global.JSON();
	
	req.setEndpoint(restUrl);  
	req.setHttpMethod('GET'); 
	
	req.setBasicAuth("api.user","W3ath3r@p1!");
	req.setRequestHeader('Accept','application/json');
	req.setRequestHeader('Content-Type','application/json');
	
	for (var property in queryParams) {
		if (queryParams.hasOwnProperty(property)) {
        	req.setQueryParameter(property, queryParams[property][0]);
		}
	}
		
	var res =  req.execute();
	
	
	var headers = {};
	headers['X-Total-Count'] = res.getHeader('X-Total-Count');
	response.setHeaders(headers);
	
	var body = res.getBody();
	
	return  parser.decode(body).result;
	

})(request, response);
]]></operation_script>
        <operation_uri>/api/x_wec_product/table/chrome/{command}</operation_uri>
        <produces>application/json,application/xml,text/xml</produces>
        <produces_customized>false</produces_customized>
        <relative_path>/chrome/{command}</relative_path>
        <request_example/>
        <requires_acl_authorization>false</requires_acl_authorization>
        <requires_authentication>false</requires_authentication>
        <short_description/>
        <sys_class_name>sys_ws_operation</sys_class_name>
        <sys_created_by>anton.sychikov.contractor@weather.com</sys_created_by>
        <sys_created_on>2016-08-31 12:31:22</sys_created_on>
        <sys_customer_update>true</sys_customer_update>
        <sys_id>c11c650e0fa526006c3005cce1050ee6</sys_id>
        <sys_mod_count>19</sys_mod_count>
        <sys_name>Unauthorized Retrieve records for Chrome</sys_name>
        <sys_package display_value="Product" source="x_wec_product">daa7dccd0f44220034457d4ce1050e47</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Product">daa7dccd0f44220034457d4ce1050e47</sys_scope>
        <sys_update_name>sys_ws_operation_c11c650e0fa526006c3005cce1050ee6</sys_update_name>
        <sys_updated_by>anton.sychikov.contractor@weather.com</sys_updated_by>
        <sys_updated_on>2016-09-02 15:02:05</sys_updated_on>
        <web_service_definition display_value="Table API">365010a60ffce2006c3005cce1050e21</web_service_definition>
        <web_service_version/>
    </sys_ws_operation>
</record_update>
